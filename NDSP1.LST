TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .FILE   'NDSP1.ASM'
 *********  CHARACTER CONSTANT OVERFLOWS A WORD
       3                    
       4                    **************************************************************************
       5                    *                                                                        *
       6                    *       COPYRIGHT (C) 1988 WILLIAMS ELECTRONICS GAMES, INC.              *
       7                    *       ALL RIGHTS RESERVED.                                             *
       8                    *                                                                        *
       9                    **************************************************************************
      10                    
      11                            .WIDTH  132
      12                            .OPTION B,D,L,T
      13                            .MNOLIST
      14                    *
      15                    *GSP DMA OBJECT HANDLER
      16                    *VERSION 1.0 BY WARREN DAVIS 9/1/87
      17                    *VERSION 2.01 BY EUGENE JARVIS 10/25/87 
      18                    *VERSION 3.0 BY EUGENE JARVIS 12/20/87
      19                    *VERSION 3.1 BY EUGENE JARVIS 7/4/88
      20                    *VERSION 3.2 BY EUGENE JARVIS 8/8/88    
      21                    ****************************************
      22                    *FILES REQUIRED FOR ASSEMBLY
      23                            .INCLUDE        \VIDEO\SYS\GSP.INC
 *********  COPY FILE OPEN ERROR
LAST ERROR AT  1
      24                            .INCLUDE        \VIDEO\SYS\SYS.INC
 *********  COPY FILE OPEN ERROR
LAST ERROR AT  23
      25                            .INCLUDE        \VIDEO\SYS\MACROS.HDR
 *********  COPY FILE OPEN ERROR
LAST ERROR AT  24
      26                            .INCLUDE        MPROC.EQU
      27                            .INCLUDE        DISP.EQU
      28                    
      29                            .DEF    QDMA,DMAQ,QDMAFLG,ANI           ;FOR FILE SCORE USAGE
      30                            .REF    HALT,GETFPAL
      31                    
      32                    *
      33                    *       GLOBAL VARIABLES
      34                    *
      35                            .SECT   "OFIXED"
      36                    
      37                    OBJLST  .LONG   0       ;POINTER TO ACTIVE OBJECT LIST
      38                    OFREE   .LONG   0       ; POINTER TO FREE OBJECT BLOCK
      39                    ENDOFREE        .LONG   0
      40                    BAKLST  .LONG   0       ;BACKGROUND LIST
      41                    ;BAK2LST  .LONG 0       ;SLOW SCROLL BACKGROUND PLANE
      42                    
      43                    
      44                            .SECT   ".text"
      45                    *
      46                            .BSS    SCROLLX,32              ;X SCROLL VALUE
      47                            .BSS    SCROLLY,32              ;Y SCROLL VALUE
      48                            .BSS    WORLDTLX,32             ;TOP LEFT X SCREEN COORD (WORLD)
      49                            .BSS    WORLDTLY,32             ;TOP LEFT Y SCREEN COORD (WORLD)
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    2

      50                            .BSS    WORLDTL,32              ;PACKED TOP LEFT WORLD COORD
      51                            .BSS    SCRNTL,32               ;TOP LEFT [Y,X] SCREEN (SCRN COORD.)
      52                            .BSS    SCRNLR,32               ;LOWER RIGHT [Y,X] SCREEN (SCRN COORD.)
      53                    ;       .BSS    BAK2TLY,32              ;TOP LFT Y SLOW SCROLL BACKGROUND
      54                    ;       .BSS    BAK2TLX,32              ;TOP LFT X SLOW SCROLL BACKGROUND
      55                            .BSS    QSYNC,16                ;SIGNALS ACTIVE Q
      56                            .BSS    DMAQCUR,32              ;CURRENT DMAQ
      57                            .BSS    DMAQCNT,16              ;CURRENT DMAQ COUNT
      58                            .BSS    BOTQ0CNT,16             ;BOTTOM QUEUE COUNT #0
      59                            .BSS    BOTQ1CNT,16             ;BOTTOM QUEUE COUNT #1
      60                            .BSS    TOPQ0CNT,16             ;TOP QUEUE COUNT #0
      61                            .BSS    TOPQ1CNT,16             ;TOP QUEUE COUNT #1
      62                            .BSS    BOTQ0FLG,16             ;BOTTOM Q0 VALID FLAG  VALID=NE
      63                            .BSS    BOTQ1FLG,16             ;BOTTOM Q1 VALID FLAG  VALID=NE
      64                            .BSS    TOPQ0FLG,16             ;TOP Q0 VALID FLAG  VALID=NE
      65                            .BSS    TOPQ1FLG,16             ;TOP Q1 VALID FLAG  VALID=NE
      66                            .BSS    OBJSTR,NOBJ*OBSIZ       ;OBJECT STRUCTURE LIST START
      67                            .BSS    OBJLSTND,0              ;OBJECT LIST END
      68                    QSIZE   .SET    NOBJ*BQCELL             ;SIZE OF QUEUES
      69                            .BSS    BOTQ0,QSIZE             ;BOTTOM OBJECT DMA Q #0
      70                            .BSS    BOTQ1,QSIZE             ;BOTTOM OBJECT DMA Q #1
      71                            .BSS    TOPQ0,QSIZE             ;TOP OBJECT DMA Q #0
      72                            .BSS    TOPQ1,QSIZE             ;TOP OBJECT DMA Q #1
      73                            .BSS    DMAQ,QSIZE              ;MISC. NON-SYNC DMA QUEUE       
      74                            .BSS    DISPLAYON,16            ;DO DISPLAY PROCESSING WHEN != 0
      75                            .BSS    SKIPDMA,16              ;SKIP DMA RESTART IF != 0
      76                            .BSS    QDMAFLG,16              ;SPECIAL DMAQ BEING UPDATED=1
      77                    ***************OVERLOAD
      78                    ****>   .BSS    OVTOP,16                ;TOP SCREEN OVERLOAD
      79                    ****>   .BSS    OVBOT,16                ;BOTTOM SCREEN OVERLOAD
      80                    
      81                    *
      82                    *DMA INTERRUPT
      83                    *
      84                    DMAINT:
      85                            MMTM    B12,B6,B7,B8,B9         ;EMPTY HER OUT
      86                            MOVE    B10,-*B12,W
      87                            MOVE    B11,-*B12,W
      88                            MOVI    DMAREGS,B12
      89                            DEC     B13
      90                    *       JRN     $                       ;ERROR, DMA QUEUE UNDERFLOW
      91                            JRN     DMAINT1
      92                            JRNZ    DMAINTX                 ;BR = MORE LEFT IN THIS QUEUE
      93                    DMAINT1:
      94                            CALLR   DMANUQ                  ;LOOK TO START A NEW Q
      95                            RETI
      96                    DMAINTX:
      97                            SUBI    >140,B14                ;SETUP Q PULL
      98                            MMFM    B14,B6,B7,B8,B9,B10     ;LOAD HER UP
      99                            MOVE    B10,B11
     100                            SRL     16,B10
     101                            RETI
     102                    
     103                    DCLIPL:
     104                            MOVE    *A0(OXPOS),A10          ;
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    3

     105                            MOVE    *A0(OYPOS),A2           ;
     106                            SLL     16,A2
     107                            MOVY    A2,A10                  ; Y:X IN A10    
     108                            MOVE    A10,*A0(ODMAXY),L       ;UPDATED XY POSITION
     109                            MOVE    B4,A6                   ;SUBTRACT WORLD COORD TO GET SCREEN COORD.
     110                            SUBXY   A6,A10
     111                            MOVE    A0,A3
     112                            ADDI    OFLAGS,A3               ;GET PARAMETER LOCATION
     113                            MMFM    A3,A12,A11,A9,A8
     114                    
     115                    *       CHECK FOR FLIPPING, NECESSITY OF CLIPPING, ADJUST OFFSET, SAG
     116                    *       A0 IS THE ADDRESS OF THE OBJECT BLOCK
     117                    *       A1 BECOMES OFFSET
     118                    *       A2=AMOUNT TO CLIP OFF BOTTOM, RIGHT     (BC,RC)
     119                    *       A3=AMOUNT TO CLIP OFF TOP, LEFT (TC,LC)
     120                    *       A6=SCREEN TOP LEFT (SCREEN COORDINATES); THEN TOTAL HORIZ. SIZE
     121                    *
     122                    *       A8 IS CONST:PALETTE
     123                    *       A9 BECOMES VS : HS
     124                    *       A10 IS DAG (Y : X)
     125                    *       A11 IS THE SAG
     126                    *       A12 IS THE CONTROL WORD B0-15; OFFSET B16-31
     127                    *       A13 IS THE WINDOW BOTTOM RT
     128                    *       A14 IS THE WINDOW TOP LEFT
     129                    *
     130                    *  COMPUTE LC, RC, TC, BC       
     131                    *
     132                            CLR     A6              ; UPPER LEFT SCREEN COORDINATES
     133                            CLR     A1              ; USE FOR CLEARING NOW, BECOMES OFFSET LATER
     134                            MOVE    A10,A2          ; PT IN A2
     135                            ADDXY   A9,A2           ; LOWER RIGHT IN A2
     136                            SUBXY   A13,A2          ; PT - WEND -> A2  ( BC : RC )
     137                            JRYGE   DIS_CLP0
     138                            MOVY    A1,A2           ; CLEAR BC IF Y NEGATIVE
     139                    DIS_CLP0:       
     140                            JRXGE   DIS_CLP1
     141                            MOVX    A1,A2           ; CLEAR RC IF X NEGATIVE        
     142                    DIS_CLP1:
     143                            MOVE    A14,A7          ; MOVE WSTART
     144                            CLR     A3                              ;
     145                            SUBXY   A10,A7          ; WSTART - PT -> A7 (TC : LC)
     146                            JRYLT   DIS_CLP2
     147                            MOVY    A7,A3           ; TC IN UPPER HALF OF A3
     148                            MOVY    A14,A10         ; ADJUST START POSITION TO WINDOW EDGE
     149                    DIS_CLP2:
     150                            JRXLT   DIS_CLP3
     151                            MOVX    A7,A3           ; LC IN LOWER HALF OF A3
     152                            MOVX    A14,A10         ; ADJUST START POSITION TO WINDOW EDGE
     153                    DIS_CLP3:
     154                            MOVX    A9,A6           ;GET TOTAL HORIZONTAL SIZE (MORSEL CORRECTED)
     155                            ADD     A3,A2           ; (TC+BC : LC+RC) IN A2
     156                            JREQ    NOCLIP          ; TOTAL CLIP IS ZERO, NOCLIP
     157                            SUBXY   A2,A9           ; GET CLIPPED SIZE...TOTALLY CLIPPED?
     158                            JRXLE   NODIS           ; YES, DON'T DISPLAY IT
     159                            JRYLE   NODIS           
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    4

     160                    
     161                    *
     162                    *CLIP THE SAG, HS, VS, AND ADJUST OFFSET
     163                    *       
     164                            MOVX    A3,A1           ;GET LEFT CLIP
     165                            SRL     16,A3           ;GET TOP CLIP
     166                            JREQ    CLIP1
     167                            MOVE    *A0(OXCLIP),A7
     168                            ADD     A6,A7           ;ADD PRECLIP TO THE WIDTH TO CALC NEW SAG
     169                            MPYS    A7,A3           ;TOP CLIP X TOTAL HORIZ SIZE
     170                    CLIP1:
     171                            SLL     16,A2
     172                            BTST    B_FLIPH,A12
     173                            JREQ    CLIP2
     174                            NEG     A2              ;NEGATE RC+LC
     175                            NEG     A1              ;NEGATE LC
     176                    CLIP2:
     177                            BTST    B_FLIPV,A12
     178                            JREQ    CLIP3
     179                            NEG     A3              ;NEGATE THS*TC
     180                    CLIP3:
     181                            ADD     A1,A3           ;ADD LEFT CLIP TERM +  TC*THS
     182                            SLL     3,A3
     183                            ADD     A3,A11          ;ADD TO SAG
     184                            ADD     A2,A12          ;ADD CLIP OFFSET TO OFFSET
     185                    NOCLIP:
     186                    **********************************************************
     187                            .IF DEBUG
     188                            BTST    15,A12
     189                            JREQ    $
     190                            .ENDIF
     191                    *
     192                    *BEAM AVOIDANCE, AT HALF SCREEN, DMA TOP HALF
     193                    *                AT FULL SCREEN, DMA BOTTOM HALF
     194                    *
     195                    *B1 = HALF SCREEN LINE COUNT
     196                    *B2=BOTTOM Q COUNT
     197                    *B3=TOP Q COUNT
     198                    *A4=BOTTOM DMA Q TO LOAD
     199                    *A5=TOP DMA Q TO LOAD
     200                    *A8 = CONST:PALETTE XLATE
     201                    *A9 = VSIZE:HSIZE
     202                    *A10 = DESTINATION Y:X
     203                    *A11 = IMAGE SAG
     204                    *A12 = OFFSET:CONTROL
     205                            
     206                            MOVE    B1,A2           ;GET HALF SCREEN LINE NUMBER(Y ADJUSTED)
     207                            CMPXY   A10,A2          ;WHERE'S THE IMAGE?
     208                            JRYLE   BEAM_STKIMG     ;BR = ON THE OTHER SIDE, TOTALLY, STACK IT
     209                    
     210                            SUBXY   A10,A2          ;DETERMINE HEIGHT ABOVE MID SCREEN
     211                            CMPXY   A2,A9           ;TOTALLY ABOVE?
     212                            JRYLE   BEAM_DODMA      ;BR = YES, DMA AS IS
     213                    
     214                            MOVE    A9,B0           ;SAVE THE SIZES
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    5

     215                    
     216                            MOVY    A2,A9           ;STUFF NEW VSIZE AND DO IT
     217                    *STACK THE SUCKER
     218                    *B1 = HALF SCREEN LINE COUNT
     219                    *B2= BOTTOM Q COUNT
     220                    *B3= TOP Q COUNT
     221                    *A4= BOTTOM DMA Q TO LOAD
     222                    *A5= TOP DMA Q TO LOAD
     223                    *A6= TOTAL HORIZONTAL SIZE
     224                    *A8 = CONST:PALETTE XLATE
     225                    *A9 = VSIZE:HSIZE
     226                    *A10 = DESTINATION Y:X
     227                    *A11 = IMAGE SAG
     228                    *A12 = OFFSET:CONTROL
     229                    
     230                            MMTM    A5,A8,A9,A10,A11,A12    ;SAVE THE DMA REGS
     231                            INC     B3
     232                    
     233                    *SET UP DMA REGS FOR BOTTOM HALF AND STACK THEM
     234                    
     235                            MOVE    B0,A9
     236                            SRL     16,A2           ;SLIDE DOWN THE Y DIFFERENTIAL
     237                            MOVE    *A0(OXCLIP),A3  ;ADD PRECLIP TO WIDTH
     238                            ADD     A6,A3           ;WE NEED TS IN AN ODD REG. FOR 32 BIT MULT.
     239                    
     240                            SLL     3,A3            ;TS = TS*8
     241                            MPYU    A2,A3           ;A3 = SAG OFFSET
     242                            
     243                            SLL     16,A2           ;Y DIFF BACK TO Y POS
     244                            SUBXY   A2,A9           ;NEW VSIZE
     245                    
     246                            ADDXY   A2,A10          ;NEW DMA POSITION
     247                    
     248                            BTST    B_FLIPV,A12
     249                            JREQ    BEAM_ADDSAG     ;BR = SUBTRACT FOR NEW SAG BECAUSE OF VFLIP
     250                    
     251                            NEG     A3              ;SAG = -SAG
     252                    
     253                    BEAM_ADDSAG:
     254                            ADD     A3,A11          ;SAG = SAG + OFFSET
     255                    
     256                    BEAM_STKIMG:
     257                            MMTM    A4,A8,A9,A10,A11,A12    ;SAVE THE DMA REGS
     258                            INC     B2
     259                            JRUC    NODIS
     260                    *STACK THE SUCKER
     261                    *B1 = HALF SCREEN LINE COUNT
     262                    *B2=BOTTOM Q COUNT
     263                    *B3=TOP Q COUNT
     264                    *A4=BOTTOM DMA Q TO LOAD
     265                    *A5=TOP DMA Q TO LOAD
     266                    *A8 = CONST:PALETTE XLATE
     267                    *A9 = VSIZE:HSIZE
     268                    *A10 = DESTINATION Y:X
     269                    *A11 = IMAGE SAG
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    6

     270                    *A12 = OFFSET:CONTROL
     271                    BEAM_DODMA:
     272                            MMTM    A5,A8,A9,A10,A11,A12    ;SAVE THE DMA REGS
     273                            INC     B3
     274                    NODIS:
     275                            MOVE    *A0,A0,L        ;GET NEXT LINK
     276                    NODIS1:
     277                            JRNE    DCLIPL          ;DONE?
     278                            RETS
     279                    
     280                    *
     281                    *GET NEW DMA Q CALLED FROM DMA INTERRUPT
     282                    *
     283                    DMANUQ:
     284                            CLR     B13
     285                            MOVE    @TOPQ0FLG,B14,W 
     286                            JREQ    DMANUQ1
     287                            CLR     B14
     288                            MOVE    B14,@TOPQ0FLG,W
     289                            MOVE    @TOPQ0CNT,B13,W
     290                            JREQ    DMANUQ1
     291                            MOVE    B14,@TOPQ0CNT,W
     292                            MOVI    TOPQ0+(QSIZE),B14
     293                            JRUC    DMANUQL
     294                    DMANUQ1:
     295                            MOVE    @TOPQ1FLG,B14,W 
     296                            JREQ    DMANUQ2
     297                            CLR     B14
     298                            MOVE    B14,@TOPQ1FLG,W
     299                            MOVE    @TOPQ1CNT,B13,W
     300                            JREQ    DMANUQ2
     301                            MOVE    B14,@TOPQ1CNT,W
     302                            MOVI    TOPQ1+(QSIZE),B14
     303                            JRUC    DMANUQL
     304                    DMANUQ2:
     305                            MOVE    @BOTQ0FLG,B14,W 
     306                            JREQ    DMANUQ3
     307                            CLR     B14
     308                            MOVE    B14,@BOTQ0FLG,W
     309                            MOVE    @BOTQ0CNT,B13,W
     310                            JREQ    DMANUQ3
     311                            MOVE    B14,@BOTQ0CNT,W
     312                            MOVI    BOTQ0+(QSIZE),B14
     313                            JRUC    DMANUQL
     314                    DMANUQ3:
     315                            MOVE    @BOTQ1FLG,B14 ,W        
     316                            JREQ    DMANUQX
     317                            CLR     B14
     318                            MOVE    B14,@BOTQ1FLG,W
     319                            MOVE    @BOTQ1CNT,B13,W
     320                            JREQ    DMANUQX
     321                            MOVE    B14,@BOTQ1CNT,W
     322                            MOVI    BOTQ1+(QSIZE),B14
     323                    DMANUQL:
     324                            SUBI    >A0,B14
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    7

     325                            MMFM    B14,B6,B7,B8,B9,B10     ;LOAD HER UP
     326                            MOVE    B10,B11
     327                            SRL     16,B10
     328                            RETS
     329                    DMANUQX:
     330                            MOVE    @INTENB,B14,W           ;DISABLE DMA INTERRUPT
     331                            ANDI    >FFFD,B14
     332                            MOVE    B14,@INTENB,W
     333                            RETS
     334                    *
     335                    *ENABLE TOP DISPLAY QUEUES
     336                    *
     337                    DISPQT:
     338                            MOVK    1,A0            ;ENABLE YOUR QUEUES
     339                            MOVE    @QSYNC,A1,W
     340                            NOT     A1
     341                            MOVE    A1,@QSYNC,W
     342                            JRNE    DISPQT1
     343                            MOVE    A0,@TOPQ1FLG,W
     344                            JRUC    DISPQT2
     345                    DISPQT1:        
     346                            MOVE    A0,@TOPQ0FLG,W
     347                    DISPQT2:
     348                    ****>   MOVK    1,A1
     349                    ****>   MOVE    @DMACTRL,A0,W   ;DMA BUSY?
     350                    ****>   JRN     DISP3           
     351                    ****>   CLR     A1              ;NO OVERLOAD
     352                    DISP3:
     353                    ****>   MOVE    A1,@OVBOT,W     ;STORE OVERLOAD 
     354                            CALLR   DMASTRT
     355                            RETS
     356                    *
     357                    *       DISPLAY OBJECT LIST 
     358                    *       CALLED AT MIDSCREEN INTERRUPT               
     359                    *
     360                    DISPLAY:
     361                            MOVE    @QSYNC,A1,W
     362                            JRNE    DISP1
     363                            MOVI    BOTQ0+(QSIZE),A4        ;SETUP NEW INTERRUPT LOAD DMA QUEUES
     364                            MOVI    TOPQ0+(QSIZE),A5
     365                            JRUC    DISP2
     366                    DISP1:  
     367                            MOVI    BOTQ1+(QSIZE),A4        ;SETUP NEW INTERRUPT LOAD DMA QUEUES
     368                            MOVI    TOPQ1+(QSIZE),A5
     369                    DISP2:
     370                    
     371                    
     372                    ***********************************************
     373                            .IF DEBUG
     374                    *SPECIAL TRAP
     375                    *CHECK IF B14 IS WITHIN Q BEING FILLED
     376                            MOVE    B14,A0
     377                            CMP     A4,A0
     378                            JRHI    DDDD1
     379                            MOVE    A4,A1
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    8

     380                            SUBI    QSIZE,A1
     381                            CMP     A1,A0
     382                            JRLO    DDDD1
     383                            JRUC    $
     384                    DDDD1
     385                            CMP     A5,A0
     386                            JRHI    DDDD2
     387                            MOVE    A5,A1
     388                            SUBI    QSIZE,A1
     389                            CMP     A1,A0
     390                            JRLO    DDDD2
     391                            JRUC    $
     392                    DDDD2
     393                            .ENDIF
     394                    ***********************************************
     395                    
     396                    
     397                            PUSHST
     398                            DINT
     399                            MOVE    @INTENB,A0,W    ;ENABLE DISPLAY INTERRUPT
     400                            ORI     DIE,A0
     401                            MOVE    A0,@INTENB,W
     402                            POPST
     403                            MOVE    @DISPLAYON,A0,W
     404                            JREQ    DISPRETS        ;BR = STOP ALL NEW DISPLAY PROCESSING
     405                    
     406                    *VELOCITY UPDATE
     407                            MOVE    @HALT,A0
     408                            JRNE    SJPAD
     409                            MOVI    OXVEL,A1
     410                            MOVI    OBJLST,A0
     411                            CALLR   DVELP   
     412                    SJPAD:
     413                    *CLIP AND LOAD DMA 
     414                    *A4=BOTTOM DMA Q TO LOAD
     415                    *A5=TOP DMA Q TO LOAD
     416                    *B1=HALF SCREEN ADDRESS
     417                    *B2=BOTTOM Q COUNT
     418                    *B3=TOP Q COUNT
     419                    *B4=WORLD TOP LEFT [Y,X]
     420                    
     421                    DCLIP:
     422                            MOVI    (HSINT-20)*>10000,B1    ;GET HALF SCREEN LINE NUMBER(Y ADJUSTED)
     423                    ;27
     424                            CLR     B3              ;TOP Q COUNT
     425                            CLR     B2              ;BOTTOM Q COUNT
     426                    
     427                    ;       MOVE    @SCROLLX,A6,L   ; GET Y:X SCROLL VALUES
     428                    ;       MOVE    @SCROLLY,A7,L
     429                    ;       SRA     1,A6
     430                    ;       SRA     1,A7            ;SCROLL 1/2 AS FAST
     431                    ;       MOVE    @BAK2TLY,A14,L  ;BACKGRD 2 SCREEN TL Y INTEGER:FRACTION
     432                    ;       MOVE    @BAK2TLX,A13,L  ;BACKGRD 2 SCREEN TL X INTEGER:FRACTION
     433                    ;       ADD     A7,A14
     434                    ;       MOVE    A14,@BAK2TLY,L
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE    9

     435                    ;       ADD     A6,A13
     436                    ;       MOVE    A13,@BAK2TLX,L
     437                    ;       SRL     16,A13
     438                    ;       MOVX    A13,A14         ;COMBINE TO FORM TOP LEFT Y:X           
     439                    ;       MOVE    A14,B4          ;SETUP WORLD TOP LEFT [Y,X]
     440                    ;       MOVE    @SCRNTL,A14,L   ;GET SCREEN BOUNDARIES
     441                    ;       MOVE    @SCRNLR,A13,L
     442                    
     443                    ****>   MOVE    @OVTOP,A0,W     ;IF OVERLOAD SKIP BAK2 UPDATE
     444                    ****>   MOVE    @OVBOT,A1,W
     445                    ****>   OR      A0,A1
     446                    ****>   JRNE    DCLIP1
     447                    
     448                    ;       MOVI    BAK2LST,A0,L
     449                    ;       CALLR   NODIS
     450                    DCLIP1:
     451                            MOVE    @SCROLLX,A6,L   ; GET Y:X SCROLL VALUES
     452                            MOVE    @SCROLLY,A7,L
     453                            MOVE    @WORLDTLY,A14,L ;SCROLL YOUR SCREEN FOLKS
     454                            MOVE    @WORLDTLX,A13,L
     455                            ADD     A6,A13
     456                            ADD     A7,A14
     457                            MOVE    A14,@WORLDTLY,L
     458                            MOVE    A13,@WORLDTLX,L
     459                            SRL     16,A13
     460                            MOVX    A13,A14         ;COMBINE TO FORM TOP LEFT Y:X           
     461                    
     462                            MOVE    A14,B4          ;SETUP WORLD TOP LEFT [Y,X]
     463                            MOVE    B4,@WORLDTL,L   ;STORE THE WORLD TOP LEFT [Y,X]
     464                            MOVE    @SCRNTL,A14,L   ;GET SCREEN BOUNDARIES
     465                            MOVE    @SCRNLR,A13,L
     466                    
     467                    ***********Z PLANE CHECK KLUDGE***********************************      
     468                    *
     469                    *       .GLOBAL         PLZMIN
     470                    *       MOVE    @PLZMIN,A1,W
     471                    *       SUBI    10,A1                   ;FUDGE FACTOR
     472                    *       MOVE    @OBJLST,A0,L
     473                    *       JREQ    DISPBAK                 ;FORGET IT NULL LIST
     474                    *       MOVE    *A0(OZPOS),A2,W         ;FIND STUFF IN BACK
     475                    *       CMP     A1,A2
     476                    *       JRGE    DISPBAK                 ;TEST FIRST ONE, NOTHING IN BACK
     477                    *DZCHL
     478                    *       MOVE    *A0(OZPOS),A2,W         ;FIND STUFF IN BACK
     479                    *       CMP     A1,A2
     480                    *       JRGE    DZCHK1
     481                    *       MOVE    *A0,A0,L
     482                    *       JRNE    DZCHL
     483                    *
     484                    *       MOVI    OBJLST,A0,L             ;EVERYTHINGS IN BACK
     485                    *       CALLR   NODIS
     486                    *
     487                    *       MOVI    BAKLST,A0,L             
     488                    *       CALLR   NODIS
     489                    *       JRUC    DISPX
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   10

     490                    *       
     491                    *DZCHK1:        
     492                    *       MOVE    *A0,A1,L               
     493                    *       MMTM    SP,A0,A1                ;SAVE OLD LIST POINTERS
     494                    *       CLR     A1
     495                    *       MOVE    A1,*A0,L                ;ZERO OUT LIST (SPLIT IT UP)
     496                    *       
     497                    *       MOVI    OBJLST,A0,L             ;OUTPUT BACK OBJECTS
     498                    *       CALLR   NODIS
     499                    *
     500                    *       MOVI    BAKLST,A0,L             ;OUTPUT BACKGROUND PLANE
     501                    *       CALLR   NODIS
     502                    *
     503                    *       MMFM    SP,A0,A1
     504                    *       MOVE    A1,*A0,L                ;RESTORE LIST
     505                    *       MOVE    A0,A0                   
     506                    *       CALLR   NODIS1                  ;PROCESS REST OF OBJECT LIST
     507                    *       JRUC    DISPX
     508                    *****************************************************************************
     509                            
     510                    DISPBAK:
     511                    
     512                            MOVI    BAKLST,A0,L
     513                            CALLR   NODIS
     514                    
     515                            MOVE    @QDMAFLG,A2     ;Q BEING MODIFIED?
     516                            JRNE    DISPX0          ;YES, DON'T SCREW WITH IT
     517                            MOVE    @DMAQCUR,A2,L
     518                            MOVI    DMAQ+QSIZE,A1
     519                            CMP     A1,A2
     520                            JREQ    DISPX0          ;NONE 
     521                            MOVE    A1,@DMAQCUR,L   ;RESET TOP OF QUEUE
     522                    DISPXL:
     523                            MOVE    -*A1,-*A5,L     ;TRANSFER YOUR Q'S
     524                            MOVE    -*A1,-*A5,L
     525                            MOVE    -*A1,-*A5,L
     526                            MOVE    -*A1,-*A5,L
     527                            MOVE    -*A1,-*A5,L
     528                            INC     B3              ;INCREMENT COUNT
     529                            CMP     A2,A1
     530                            JRHI    DISPXL
     531                    DISPX0:
     532                    
     533                            MOVI    OBJLST,A0,L
     534                            CALLR   NODIS
     535                    
     536                    *PUT NULL DMA ON DMA QUEUES     
     537                            MOVI    NULLDMA,A0
     538                            MMFM    A0,A8,A9,A10,A11,A12
     539                            MMTM    A5,A8,A9,A10,A11,A12    ;NULL DMA JUNK TOPQ
     540                            MMTM    A4,A8,A9,A10,A11,A12    ;NULL DMA JUNK BOTQ
     541                    
     542                            MOVE    @QSYNC,A0,W
     543                            JRNE    DISPX1
     544                            MOVE    B2,@BOTQ0CNT
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   11

     545                            MOVE    B3,@TOPQ0CNT
     546                            RETS
     547                    DISPX1: 
     548                            MOVE    B2,@BOTQ1CNT
     549                            MOVE    B3,@TOPQ1CNT
     550                    DISPRETS
     551                            RETS                    ;YIP, SHOVE IT...
     552                    
     553                    *NULL DMA DATA
     554                    NULLDMA:        .LONG   >8000,IROM,0,>00010001,0
     555                    
     556                    *
     557                    *VELOCITY ADD LOOP
     558                    *
     559                    DVEL:
     560                    ***     MOVE    *A0(OFLAGS),A3,W        ;CHECK FOR NO VELOCITY BLOCKS
     561                    ***     BTST    B_NOMOV,A3              
     562                    ***     JRNE    DVELP                   ;NO VELOCITY, SKIP IT
     563                    DVEL1:
     564                            MOVE    A0,A3
     565                            ADD     A1,A3                   ;ADD IN OXVEL
     566                    
     567                    *A12:OXVEL, A11:0YVEL, A10:OXPOS, A9:OYPOS, A8: OZPOS  A7:OZVEL
     568                    **      MMFM    A3,A7,A8,A9,A10,A11,A12
     569                    
     570                    *A12:OXVEL, A11:0YVEL, A10:OXPOS, A9:OYPOS
     571                            MMFM    A3,A9,A10,A11,A12
     572                    
     573                            ADD     A12,A10         ;ADD X VELOCITY TO XVAL
     574                            ADD     A11,A9          ;ADD Y VELOCITY TO YVAL
     575                    **      ADD     A7,A8           ;ADD Z VELOCITY TO ZVAL
     576                    **      SUBK    20H,A3
     577                    **      MMTM    A3,A8,A9,A10
     578                            MMTM    A3,A9,A10
     579                    
     580                    DVELP:
     581                            MOVE    *A0,A0,L        ;GET NEXT ONE FOLKS
     582                            JRNE    DVEL
     583                            RETS
     584                    *
     585                    *PRIME DMA INTERRUPT FOR BOTTOM QUEUE
     586                    *
     587                    DISPH:
     588                            MOVK    1,A0            ;ENABLE YOUR QUEUES
     589                            MOVE    @QSYNC,A1,W
     590                            JRNE    DISPH1
     591                            MOVE    A0,@BOTQ1FLG,W
     592                            JRUC    DISPH2
     593                    DISPH1: 
     594                            MOVE    A0,@BOTQ0FLG,W
     595                    DISPH2:
     596                    ****>   NOP
     597                    ****>   MOVK    1,A1
     598                    ****>   MOVE    @DMACTRL,A0,W   ;DMA BUSY?
     599                    ****>   JRN     DISPH3          ;YES, DO NOT RESTART
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   12

     600                    ****>   CLR     A1
     601                    DISPH3:
     602                    ****>   MOVE    A1,@OVTOP,W     ;OVERLOAD INDICATOR
     603                            CALLR   DMASTRT         ;START DMA IF APPROPRIATE
     604                            RETS
     605                    *
     606                    *START DMA IF APPROPRIATE
     607                    *
     608                    DMASTRT:
     609                            PUSHST
     610                            DINT
     611                            MOVE    B13,B13
     612                            JRNE    DMASTRTX        ;IF COUNT > 0, DMA ALREADY GOING
     613                            CALLR   DMANUQ          ;GET NEW Q
     614                            MOVE    B13,B13
     615                            JREQ    DMASTRTX        ;ZERO COUNT DONT RESTART
     616                            MOVE    @SKIPDMA,A0,W
     617                            JRNZ    DMASTRTX        ;BR = DMA BLOCKED       
     618                            MOVE    @INTENB,A0,W    ;ENABLE DMA INTERRUPT
     619                            ORI     X1E,A0
     620                            MOVE    A0,@INTENB,W
     621                            MOVE    @DMACTRL,A0,W   ;DMA BUSY?
     622                            JRN     DMASTRTX        ;YES, DO NOT RESTART
     623                            MOVI    DMAREGS,B12     ;MAKE SURE B12 SETUP
     624                            CLR     A0
     625                            MOVE    A0,@DMACTRL,W   ;KILL ANY PENDING
     626                            TRAP    1
     627                    DMASTRTX:
     628                            POPST
     629                            RETS
     630                    *
     631                    *QDMA PUTS IMAGE ON DMA Q
     632                    *INPUTS:
     633                    *A1: CONSTANT COLOR:PALETTE
     634                    *A3: DESTINATION Y:X
     635                    *A5: OFFSET:CONTROL
     636                    *A14: ADDRESS OF IMAGE HEADER
     637                    *GETS: A2=H/W; A4=SAG
     638                    QDMA:
     639                            MMTM    SP,A2,A4,A13
     640                            MOVE    *A14,A2,L               ;GET VSIZE:HSIZE
     641                            MOVE    *A14(ISAG),A4,L         ;GET SAG
     642                    QDMA1:
     643                            MOVK    1,A13
     644                            MOVE    A13,@QDMAFLG,W          ;Q BEING MODIFIED
     645                            MOVE    @DMAQCUR,A13,L
     646                            CMPI    DMAQ,A13
     647                            JRLS    QDMAX                   ;Q OVERLOAD, CAN IT
     648                            MMTM    A13,A1,A2,A3,A4,A5
     649                            MOVE    A13,@DMAQCUR,L
     650                            CLR     A13
     651                            MOVE    A13,@QDMAFLG,W
     652                    QDMAX:
     653                            MMFM    SP,A2,A4,A13
     654                            RETS
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   13

     655                    *MANUAL DMA (SETUP YOUR OWN REGS)
     656                    *INPUTS:
     657                    *A1: CONSTANT COLOR:PALETTE
     658                    *A2: VSIZE:HSIZE
     659                    *A3: DESTINATION Y:X
     660                    *A4: SAG
     661                    *A5: OFFSET:CONTROL
     662                    QDMAN:
     663                            MMTM    SP,A2,A4,A13
     664                            JRUC    QDMA1
     665                    **************************************************************************
     666                    *                                                                        *
     667                    * STOPOBJS - ZEROS VELOCITIES FOR ALL OBJECTS ON OBJLST.                 *
     668                    *                                                                        *
     669                    **************************************************************************
     670                    STOPOBJS
     671                            MMTM    SP,A0,A1
     672                            CLR     A0
     673                            MOVI    OBJLST,A1
     674                    SOBJS1
     675                            MOVE    *A1,A1,L
     676                            JREQ    SOBJSX
     677                            MOVE    A0,*A1(OXVEL),L
     678                            MOVE    A0,*A1(OYVEL),L
     679                    ;       MOVE    A0,*A1(OZVEL),L
     680                            JRUC    SOBJS1
     681                    SOBJSX
     682                            MMFM    SP,A0,A1
     683                            RETS
     684                    
     685                    *
     686                    *SORT OBJECT LIST IN Z:Y PRIORITY
     687                    *
     688                    YZSORT:
     689                            MMTM    SP,A0,A1,A2,A4,A5,A7,A8
     690                            MOVI    080000000H,A1   ;LOWEST POSSIBLE Z
     691                            MOVI    080000000H,A5   ;LOWEST POSSIBLE Y
     692                            MOVI    OBJLST,A0
     693                            JRUC    YZLP
     694                    YZLP0:
     695                    ;       MOVE    *A2(OZVAL),A8,L         ;TEST Z
     696                            MOVE    *A2(OZPOS),A8,W         ;TEST Z
     697                    ; TURMELL CHANGED MAY 9 1989
     698                            MOVE    *A2(OYVAL),A7,L         ;TEST Y
     699                            CMP     A1,A8
     700                            JRGT    PRIOK
     701                            JRLT    PRISWAP
     702                    
     703                            CMP     A5,A7
     704                            JRGE    PRIOK
     705                    PRISWAP:
     706                            PUSHST
     707                            DINT
     708                            MOVE    A2,*A4,L
     709                            MOVE    *A2,*A0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   14

     710                            MOVE    A0,*A2,L
     711                            POPST
     712                            MOVE    A2,A4
     713                            JRUC    YZLP
     714                    PRIOK:
     715                            MOVE    A0,A4
     716                            MOVE    A2,A0
     717                            MOVE    A8,A1
     718                            MOVE    A7,A5
     719                    YZLP:
     720                            MOVE    *A0,A2,L        ; CURRENT LINK IN A2, PREV IN A4
     721                            JRNE    YZLP0
     722                            MMFM    SP,A0,A1,A2,A4,A5,A7,A8
     723                            RETS
     724                    *                                                                        *
     725                    **************************************************************************
     726                    *
     727                    *TEST IF OBJECT ON SCREEN
     728                    *A8=OBJECT
     729                    *RETURNS EQ IF ON SCREEN
     730                    *
     731                    *ENTER HERE AND PROVIDE YOUR OWN SCREEN BOUNDRIES
     732                    SCRTSTG
     733                    ;       MMTM    SP,A0,A1,A2,A3
     734                            MMTM    SP,A1,A2,A3
     735                            JRUC    SCRTST1
     736                    *NORMAL SCREEN BOUNDRIES
     737                    SCRTST:
     738                    ;       MMTM    SP,A0,A1,A2,A3  
     739                            MMTM    SP,A1,A2,A3     
     740                    
     741                            MOVE    @SCRNTL,A2,L            ;GET SCREEN TOP LEFT
     742                            MOVE    @SCRNLR,A3,L            ;GET SCREEN LOWER RT.
     743                    SCRTST1
     744                            MOVE    *A8(OYPOS),A0,W
     745                            MOVE    *A8(OXPOS),A1,W
     746                            SLL     16,A0
     747                            MOVX    A1,A0                   ;GET TOP LEFT OF OBJECT
     748                            MOVE    @WORLDTL,A1,L
     749                            SUBXY   A1,A0                   ;SUBTRACT OUT WORLD BASE
     750                            MOVE    *A8(OSIZE),A1,L
     751                            ADDXY   A0,A1                   ;GET LOWER RT OF OBJECT
     752                    
     753                            CMPXY   A3,A0                   ;IS IT LOWER THAN LOWER RT?
     754                            JRYGE   SCRTF_D                 ;LOWER
     755                            JRXGE   SCRTF_R                 ;TO THE RIGHT
     756                    
     757                            CMPXY   A2,A1
     758                            JRYLE   SCRTF_U                 ;ABOVE...
     759                            JRXLE   SCRTF_L                 ;TO THE LEFT..
     760                    
     761                            CLR     A0
     762                            MMFM    SP,A1,A2,A3
     763                            RETS
     764                    SCRTF_L MOVI    1,A0
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   15

     765                            MMFM    SP,A1,A2,A3
     766                            RETS
     767                    SCRTF_R MOVI    2,A0
     768                            MMFM    SP,A1,A2,A3
     769                            RETS
     770                    SCRTF_U MOVI    3,A0
     771                            MMFM    SP,A1,A2,A3
     772                            RETS
     773                    SCRTF_D MOVI    4,A0
     774                            MMFM    SP,A1,A2,A3
     775                            RETS
     776                    *
     777                    *CLIP AN OBJECT
     778                    *INPUTS:
     779                    *A2=BOTTOM:RIGHT CLIP (RELATIVE TO CURRENT SIZE)
     780                    *A3=TOP:LEFT CLIP (RELATIVE TO CURRENT SIZE)
     781                    *A8=OBJECT BLOCK
     782                    *RETURNS
     783                    *NEW SAG,H,W,OFFSET,XCLIP IN OBJECT STRUCTURE
     784                    *ALL REGISTERS PRESERVED
     785                    *
     786                    CLIPOBJ:
     787                            MMTM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A9,A11,A12
     788                            MOVE    A8,A0
     789                            MOVE    *A8(OXPOS),A4,W
     790                            MOVE    *A8(OYPOS),A5,W
     791                            ADDI    OFLAGS,A0       ;GET INDEX INTO OBJECT STRUCTURE
     792                    
     793                    *       A1 BECOMES OFFSET
     794                    *       A6= TOTAL HORIZ. SIZE
     795                    *       A9= VS:HS
     796                    *       A11= SAG
     797                    *       A12= OFFSET:FLAGS
     798                    
     799                            MMFM    A0,A9,A11,A12
     800                            MOVE    *A8(OXCLIP),A7
     801                            CLR     A6
     802                            MOVX    A9,A6           ;GET TOTAL HORIZ SIZE
     803                            ADD     A3,A2           ;LC+RC
     804                            SUBXY   A2,A9           ;DECREASE H,W BY XCLIP,YCLIP
     805                    *
     806                    *CLIP THE SAG, HS, VS, AND ADJUST OFFSET
     807                    *       
     808                            MOVX    A3,A1           ;GET LEFT CLIP
     809                            SEXT    A1,W
     810                            ADD     A1,A4           ;ADJUST OXPOS
     811                            SRA     16,A3           ;GET TOP CLIP
     812                            ADD     A3,A5           ;ADJUST OYPOS
     813                            JREQ    OCLIP1
     814                            ADD     A7,A6           ;ADD PRECLIP TO THE WIDTH TO CALC NEW SAG
     815                            MPYS    A6,A3           ;TOP CLIP X TOTAL HORIZ SIZE
     816                    OCLIP1:
     817                            ADDXY   A2,A7
     818                            ZEXT    A7,W            ;NEW OXCLIP
     819                            SLL     16,A2
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   16

     820                            BTST    B_FLIPH,A12
     821                            JREQ    OCLIP2
     822                            NEG     A2              ;NEGATE RC+LC
     823                            NEG     A1              ;NEGATE LC
     824                    OCLIP2:
     825                            BTST    B_FLIPV,A12
     826                            JREQ    OCLIP3
     827                            NEG     A3              ;NEGATE THS*TC
     828                    OCLIP3:
     829                            ADD     A1,A3           ;ADD LEFT CLIP TERM +  TC*THS
     830                            SLL     3,A3
     831                            ADD     A3,A11          ;ADD TO SAG
     832                            ADD     A2,A12          ;ADD CLIP OFFSET TO OFFSET
     833                            PUSHST
     834                            DINT
     835                            MMTM    A0,A9,A11,A12
     836                            MOVE    A4,*A8(OXPOS),W
     837                            MOVE    A5,*A8(OYPOS),W
     838                            MOVE    A7,*A8(OXCLIP),W        ;NEW OXCLIP
     839                            POPST
     840                            MMFM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A9,A11,A12
     841                            RETS
     842                            
     843                    **************************************************************************
     844                    *                                                                        *
     845                    * OBJECT BLOCK INITIALIZATION ROUTINES                                   *
     846                    *                                                                        *
     847                    **************************************************************************
     848                    
     849                    **************************************************************************
     850                    *                                                                        *
     851                    * OINIT - INITIALIZE FREE LIST                                           *
     852                    *                                                                        *
     853                    **************************************************************************
     854                    OINIT:
     855                            MMTM    SP,A0,A1,A2,A3  ;SAVE REG               
     856                            CLR     B13                     ;CLEAR OUT DMA DEDICATED REGISTERS
     857                            CLR     B14     
     858                            MOVI    NOBJ,A3,W               ;# OF OBJECT BLOCKS TO INIT
     859                    
     860                            MOVI    SCRNST,A0,L     ;INIT SCREEN TOP LEFT [Y,X]
     861                            MOVE    A0,@SCRNTL,L
     862                            MOVI    SCRNEND,A0,L    ;INIT SCREEN LOWER RIGHT [Y,X]
     863                            MOVE    A0,@SCRNLR,L
     864                    
     865                            PUSHST
     866                            DINT
     867                            MOVE    @INTENB,A0,W
     868                            ANDNI   X1E,A0          ;NO MORE DMA INTERRUPTS
     869                            MOVE    A0,@INTENB,W
     870                            POPST
     871                    
     872                            CLR     A0
     873                            MOVE    A0,@SKIPDMA,W
     874                            MOVE    A0,@WORLDTLY,L
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   17

     875                    ;       MOVE    A0,@BAK2TLY,L
     876                            MOVE    A0,@WORLDTLX,L
     877                    ;       MOVE    A0,@BAK2TLX,L
     878                            MOVE    A0,@WORLDTL,L
     879                            MOVE    A0,@DMAQCNT,W           ;CLEAR CURRENT DMAQ COUNT
     880                            MOVE    A0,@BOTQ0CNT,W          ;CLEAR BOTTOM QUEUE COUNT #0
     881                            MOVE    A0,@BOTQ1CNT,W          ;CLEAR BOTTOM QUEUE COUNT #1
     882                            MOVE    A0,@TOPQ0CNT,W          ;CLEAR TOP QUEUE COUNT #0
     883                            MOVE    A0,@TOPQ1CNT,W          ;CLEAR TOP QUEUE COUNT #1
     884                    
     885                            MOVI    DMAQ+QSIZE,A1
     886                            MOVE    A1,@DMAQCUR,L           ;INIT MISC DMA QUEUE
     887                            
     888                            MOVE    A0,@SCROLLX,L   ;CLEAR SCROLLX
     889                            MOVE    A0,@SCROLLY,L   ;CLEAR SCROLLX
     890                    
     891                    ;       MOVE    A0,@BAK2LST,L   ;NULL BACKGROUND 2 OBJECT LIST
     892                            MOVE    A0,@BAKLST,L    ;NULL BACKGROUND OBJECT LIST
     893                            MOVE    A0,@OBJLST,L    ;NULL OBJECT LIST
     894                            MOVI    OBJSTR,A1,L
     895                            MOVE    A1,@OFREE,L     ;SETUP FREE LIST
     896                    OINITL: 
     897                            MOVE    A1,A2
     898                            ADDI    OBSIZ,A1,W
     899                            MOVE    A1,*A2,L                ;LINK EM UP
     900                            DSJS    A3,OINITL               ;CONTINUE FOR NPROC
     901                            MOVE    A0,*A2,L                ;ZERO LAST LINK
     902                            MMFM    SP,A0,A1,A2,A3  ;RESTORE REGS
     903                            RETS
     904                    
     905                    **************************************************************************
     906                    *                                                                        *
     907                    * GETOBJ - GET A FREE OBJECT BLOCK FOR USE                               *
     908                    * RETURNS                                                                *
     909                    * A0 = PTR TO OBJECT BLOCK                                               *
     910                    * IF NO BLOCKS WERE AVAILABLE THEN THE Z FLAG IS SET                     *
     911                    *                                                                        *
     912                    **************************************************************************
     913                    GETOBJ:
     914                            MOVE    A2,*-SP,1 
     915                            MOVE    @OFREE,A0,L     ; POINTER TO NEXT AVAILABLE OBJ BLOCK
     916                            JREQ    NONELFT
     917                            MOVE    *A0,A2,L
     918                            MOVE    A2,@OFREE,L     ; ADJUST POINTER TO FREE LIST
     919                            CLR     A2
     920                    ;       MOVE    A2,*A0(OSHAD),L ;CLEAR SHADOW LINK
     921                            MOVE    A2,*A0(OXCLIP),W        ;CLEAR CLIP
     922                            MOVE    A2,*A0(ODMAXY),L        ;CLEAR DMA XY POSITION
     923                            MOVE    A2,*A0(OPLINK),L        ;CLEAR LINK
     924                    ;       MOVE    A2,*A0(OSLINK),L        ;CLEAR SUPPLEMENTAL LINK
     925                    ;       MOVE    A2,*A0(OBLIPIMG),L      ;CLEAR SCANNER BLIP STUFF
     926                    ;       MOVE    A2,*A0(OEBLIP),L
     927                            MOVE    A2,*A0(OFLAGS),W
     928                            MOVE    A0,A0           ; CLEAR Z FLAG  
     929                    GETOX:          
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   18

     930                            MMFM    SP,A2           ;DONT SCREW UP Z-FLAG
     931                            RETS
     932                    NONELFT:
     933                            .IF     DEBUG
     934                            LOCKUP
     935                            EINT
     936                            .ELSE
     937                            CALLERR 3,1
     938                            .ENDIF
     939                            JRUC    GETOX
     940                    *
     941                    *FREE OBJECT WITH ERROR CHECKING
     942                    *
     943                    ;FREEOBJE
     944                    ;       MMTM    SP,A1,A2
     945                    ;       CMPI    OBJSTR,A0
     946                    ;       JRHS    FREEE1
     947                    ;
     948                    ;       .IF     DEBUG
     949                    ;       LOCKUP
     950                    ;*      CALLERR 2                       ;PTR TOO LOW
     951                    ;       EINT
     952                    ;       .ENDIF
     953                    ;
     954                    ;       JRUC    FREERRX
     955                    ;FREEE1
     956                    ;       CMPI    OBJLSTND,A0
     957                    ;       JRLO    FREEE2
     958                    ;
     959                    ;       .IF     DEBUG
     960                    ;*              CALLERR 2                       ;PTR TOO HIGH
     961                    ;       LOCKUP
     962                    ;       EINT
     963                    ;       .ENDIF
     964                    ;
     965                    ;       JRUC    FREERRX
     966                    ;FREEE2
     967                    ;       MOVE    A0,A2
     968                    ;       SUBI    OBJSTR,A2
     969                    ;       MOVI    OBSIZ,A1
     970                    ;       MODU    A1,A2
     971                    ;       JRZ     FREEE3
     972                    ;
     973                    ;       .IF     DEBUG
     974                    ;*      CALLERR 2                       ;PTR NOT VALID
     975                    ;       LOCKUP
     976                    ;       EINT
     977                    ;       .ENDIF
     978                    ;
     979                    ;       JRUC    FREERRX 
     980                    ;FREEE3
     981                    ;       CALLR   ISOBJ
     982                    ;       JREQ    FREEE4
     983                    ;
     984                    ;       .IF     DEBUG
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   19

     985                    ;*      CALLERR 2                       ;OBJECT IS ON THE ACTIVE LIST
     986                    ;       LOCKUP
     987                    ;       EINT
     988                    ;       .ENDIF
     989                    ;
     990                    ;       JRUC    FREERRX
     991                    ;FREEE4
     992                    ;       CALLR   ISFREE
     993                    ;       JREQ    FREEEC
     994                    ;
     995                    ;       .IF     DEBUG
     996                    ;*      CALLERR 2                       ;OBJECT IS ALREADY ON THE FREE LIST
     997                    ;       LOCKUP
     998                    ;       EINT
     999                    ;       .ENDIF
    1000                    ;
    1001                    ;FREERRX
    1002                    ;       MMFM    SP,A1,A2                ;EXIT WITH ERROR
    1003                    ;       RETS
    1004                    ;FREEEC
    1005                    ;       MMFM    SP,A1,A2                ;EVERYTHING IS O.K. CONTINUE TO FREEOBJ
    1006                    *
    1007                    *MAIN FREE OBJECT ENTRY
    1008                    FREEOBJ
    1009                            PUSH    A2
    1010                            MOVE    @OFREE,A2,L                             
    1011                            MOVE    A2,*A0,L
    1012                            MOVE    A0,@OFREE,L             ;BLOCK IS ON FREE LIST NOW
    1013                            PULL    A2
    1014                            RETS
    1015                    
    1016                    
    1017                    *
    1018                    *       INSERT AN OBJECT BLOCK INTO AN OBJECT LIST
    1019                    *       LIST IS SORTED BY INCREASING Z AND INCREASING Y WITHIN CONSTANT Z
    1020                    *
    1021                    *       BLOCK TO BE INSERTED IN A0
    1022                    *
    1023                    *INSERT BACKGROUND 2 OBJECT (SORTED)
    1024                    ;INSB2OBJ:
    1025                    ;       MMTM    SP,A1,A2,A3,A4,A5
    1026                    ;       MOVI    BAK2LST,A4
    1027                    ;       JRUC    INSOBJ0
    1028                    *INSERT BACKGROUND OBJECT (SORTED)
    1029                    INSBOBJ:
    1030                            MMTM    SP,A1,A2,A3,A4,A5
    1031                            MOVI    BAKLST,A4
    1032                            JRUC    INSOBJ0
    1033                    *INSERT FOREGROUND OBJECT
    1034                    INSOBJ:
    1035                            MMTM    SP,A1,A2,A3,A4,A5
    1036                            MOVI    OBJLST,A4
    1037                    INSOBJ0:
    1038                    ;       MOVE    *A0(OZVAL),A1,L         ; GET Z POSITION
    1039                            MOVE    *A0(OZPOS),A1,W         ; GET Z POSITION
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   20

    1040                    ; TURMELL CHANGED
    1041                            MOVE    *A0(OYVAL),A5,L         ; GET Y POSITION
    1042                    INS_LOOP:
    1043                            MOVE    A4,A2                   ; PTR TO PREV IN A2
    1044                            MOVE    *A2,A4,L                ; PTR TO NEXT IN A4
    1045                            JREQ    INS_AT_END              ; BRA IF AT END OF LIST
    1046                    ;       MOVE    *A4(OZVAL),A3,L         ; ZPOS IN A3
    1047                            MOVE    *A4(OZPOS),A3,W         ; ZPOS IN A3
    1048                            CMP     A3,A1
    1049                            JRGT    INS_LOOP
    1050                            JRLT    INS_AT_END
    1051                    
    1052                            MOVE    *A4(OYVAL),A3,L         ;TEST Y POSITION
    1053                            CMP     A3,A5
    1054                            JRGT    INS_LOOP
    1055                    INS_AT_END:
    1056                            MOVE    A4,*A0,L                ; PUT NEXT LINK IN NEW BLOCK
    1057                            MOVE    A0,*A2,L                ; PUT LINK TO NEW IN PREV BLOCK
    1058                            MMFM    SP,A1,A2,A3,A4,A5
    1059                            RETS
    1060                    *
    1061                    *       DELETE AN OBJECT BLOCK FROM THE OBJECT LIST
    1062                    *
    1063                    *       BLOCK TO BE DELETED IN A0
    1064                    *
    1065                    *DELETE BACKGROUND OBJECT
    1066                    ;DELB2OBJ:
    1067                    ;       MMTM    SP,A2,A4
    1068                    ;       MOVI    BAK2LST,A4
    1069                    ;       JRUC    DEL_LOOP
    1070                    *DELETE BACKGROUND OBJECT
    1071                    ;DELBOBJ:
    1072                    ;       MMTM    SP,A2,A4
    1073                    ;       MOVI    BAKLST,A4
    1074                    ;       JRUC    DEL_LOOP
    1075                    ;
    1076                    ;       .IF     DEBUG
    1077                    ;       LOCKUP
    1078                    ;       .ENDIF
    1079                    
    1080                    *DELETE FOREGROUND OBJECT
    1081                    DELOBJ:
    1082                            MMTM    SP,A0,A2,A3,A4,A8
    1083                            MOVI    OBJLST,A4
    1084                    DEL_LOOP:
    1085                            MOVE    A4,A2           ; PTR TO PREV IN A2
    1086                            MOVE    *A2,A4,L        ; PTR TO NEXT IN A4
    1087                            JRNZ    DEL_CHK
    1088                    
    1089                            .IF     DEBUG
    1090                            LOCKUP
    1091                            EINT
    1092                            .ELSE
    1093                            CALLERR 1,5             
    1094                            .ENDIF
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   21

    1095                            
    1096                            JRUC    DELOBJX
    1097                    ***NO_DEL:
    1098                    ***     JREQ    NO_DEL          ; ERROR IF AT END OF LIST (HANG UP)
    1099                    DEL_CHK
    1100                            CMP     A4,A0
    1101                            JRNE    DEL_LOOP
    1102                    
    1103                            
    1104                            MOVE    *A0,*A2,L       ; PUT NEXT LINK IN PREV BLOCK
    1105                            MOVE    @OFREE,A2,L                             
    1106                            MOVE    A2,*A0,L
    1107                            MOVE    A0,@OFREE,L     ; RETURN DELETED BLOCK TO FREE STACK
    1108                    
    1109                            move    *A0(OFLAGS),A4,W
    1110                            andni   M_INUSE,A4
    1111                            move    A4,*A0(OFLAGS),W
    1112                    
    1113                    DELOBJX
    1114                            MMFM    SP,A0,A2,A3,A4,A8
    1115                            RETS
    1116                    **************************************************************************
    1117                    *                                                                        *
    1118                    * KILL A CLASS OF OBJECTS                                                *
    1119                    * A0=OID (16 BITS) ,A1=MASK (16 BITS)                                    *
    1120                    * MASK BITS OF ZERO ARE DONT CARES                                       *
    1121                    *                                                                        *
    1122                    **************************************************************************
    1123                    *KILL A CLASS FROM THE BACKGROUND
    1124                    ;KILB2OBJ
    1125                    ;       MMTM    SP,A0,A2,A3,A4,A5
    1126                    ;       MOVI    BAK2LST,A2,L
    1127                    ;       JRUC    KILGEN
    1128                    *KILL A CLASS FROM THE BACKGROUND
    1129                    KILBOBJ
    1130                            MMTM    SP,A0,A2,A3,A4,A5
    1131                            MOVI    BAKLST,A2,L
    1132                            JRUC    KILGEN
    1133                    *KILL A CLASS FROM THE OBJECT LIST
    1134                    KILOBJ: 
    1135                            MMTM    SP,A0,A2,A3,A4,A5
    1136                            MOVI    OBJLST,A2,L
    1137                    
    1138                    KILGEN
    1139                            AND     A1,A0           ;FORM MATCH
    1140                    
    1141                    KILOBP: 
    1142                            MOVE    A2,A3           ;SAVE PREVIOUS
    1143                            MOVE    *A2,A2,L        ;GET NEXT
    1144                            JREQ    KILOBX          ;ALL DONE
    1145                            MOVE    *A2(OID),A4
    1146                            AND     A1,A4           ;CAN DONT CARE BITS
    1147                            CMP     A0,A4           ;MATCH?
    1148                            JRNE    KILOBP          ;NO
    1149                    
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   22

    1150                            MOVE    *A2,*A3,L       ;LINK AROUND IN ACTIVE LIST     
    1151                            MOVE    @OFREE,A5,L     ;LINK INTO FREE LIST AT START
    1152                            MOVE    A5,*A2,L
    1153                            MOVE    A2,@OFREE,L     ;POINT FREE TO CELL
    1154                            MOVE    A3,A2
    1155                            JRUC    KILOBP          ;KILL THE REST
    1156                    KILOBX: 
    1157                            MMFM    SP,A0,A2,A3,A4,A5
    1158                            RETS
    1159                    **************************************************************************
    1160                    *                                                                        *
    1161                    * EXISTOBJ - DOES AN OBJECT FROM A CERTAIN CLASS EXIST?                  *
    1162                    * A0 = OID                                                               *
    1163                    * A1 = MASK(0'S DON'T CARE)                                              *
    1164                    * RETURNS:                                                               *
    1165                    *       Z BIT SET = NO OBJECT, A0 = 0                                    *
    1166                    *       Z BIT CLR = YES OBJECT, A0 = PTR TO OBJECT                       *
    1167                    *                                                                        *
    1168                    **************************************************************************
    1169                    EXISTOBJ:
    1170                            MMTM    SP,A2,A3
    1171                            MOVI    OBJLST,A2,L
    1172                            SEXT    A0,W
    1173                            AND     A1,A0           ;FORM MATCH
    1174                    EXISTOBP:       
    1175                            MOVE    *A2,A2,L        ;GET NEXT
    1176                            JREQ    EXISTOBX        ;ALL DONE
    1177                            MOVE    *A2(OID),A3
    1178                            AND     A1,A3           ;CAN DONT CARE BITS
    1179                            CMP     A0,A3           ;MATCH?
    1180                            JRNE    EXISTOBP        ;NO
    1181                    EXISTOBX:
    1182                            MOVE    A2,A0
    1183                            MMFM    SP,A2,A3
    1184                            RETS
    1185                    **************************************************************************
    1186                    *                                                                        *
    1187                    * ISOBJ - IS AN OBJECT ON THE OBJECT LIST?                               *
    1188                    * A0 = PTR TO OBJECT                                                     *
    1189                    * RETURNS:                                                               *
    1190                    *       Z BIT SET = NO OBJECT, A0 = 0                                    *
    1191                    *       Z BIT CLR = NO OBJECT, A0 = PTR TO OBJECT                        *
    1192                    *                                                                        *
    1193                    **************************************************************************
    1194                    ISOBJ:  
    1195                            PUSH    A2
    1196                            MOVI    OBJLST,A2,L
    1197                            JRUC    ISOBP
    1198                    **************************************************************************
    1199                    *                                                                        *
    1200                    * ISFREE - IS AN OBJECT ON THE FREE LIST?                                *
    1201                    * A0 = PTR TO OBJECT                                                     *
    1202                    * RETURNS:                                                               *
    1203                    *       Z BIT SET = NO OBJECT, A0 = 0                                    *
    1204                    *       Z BIT CLR = NO OBJECT, A0 = PTR TO OBJECT                        *
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   23

    1205                    *                                                                        *
    1206                    **************************************************************************
    1207                    ISFREE: 
    1208                            PUSH    A2
    1209                            MOVI    OFREE,A2,L
    1210                            JRUC    ISOBP
    1211                    ISOBP:  
    1212                            MOVE    *A2,A2,L        ;GET NEXT
    1213                            JREQ    ISOBX           ;ALL DONE
    1214                            CMP     A0,A2           ;OBJECT?
    1215                            JRNE    ISOBP           ;NO
    1216                            MOVE    A0,A0           ;CLR Z BIT
    1217                    ISOBX:
    1218                            PULL    A2
    1219                            RETS
    1220                    
    1221                    *
    1222                    *MAKE AN OBJECT
    1223                    *RETURN(S)
    1224                    *A0 = OBJECT BLOCK PTR
    1225                    *A14 = POINTS TO THE INITIALIZATION TABLE
    1226                    *
    1227                    MAKOBJ  CALLA   GETOBJ
    1228                            JRZ     MAKOBX          ;NONE LEFT
    1229                            CALLR   STFOBJ  
    1230                            CALLR   INSOBJ
    1231                            MOVE    A0,A0           ;RETURN NON-ZERO
    1232                    MAKOBX  RETS
    1233                    
    1234                    **************************************************************************
    1235                    *                                                                        *
    1236                    * ADJSTWTL - ADJUST THE OBJECT'S COORDINATES IN RELATION TO THE          *
    1237                    *          WORLD. IT IS ASSUMED THAT THE CURRENT COORDINATES             *
    1238                    *          ARE SCREEN RELATIVE.                                          *
    1239                    * A0 = PTR TO THE OBJECT BLOCK                                           *
    1240                    *                                                                        *
    1241                    **************************************************************************
    1242                    ADJSTWTL
    1243                            MMTM    SP,A3,A5
    1244                            MOVE    @WORLDTLX,A5,L
    1245                            MOVE    *A0(OXVAL),A3,L
    1246                            ADD     A5,A3
    1247                            MOVE    A3,*A0(OXVAL),L
    1248                            MOVE    @WORLDTLY,A5,L
    1249                            MOVE    *A0(OYVAL),A3,L
    1250                            ADD     A5,A3
    1251                            MOVE    A3,*A0(OYVAL),L
    1252                            MMFM    SP,A3,A5
    1253                            RETS
    1254                    **************************************************************************
    1255                    *                                                                        *
    1256                    * ADJNEWTL - ADJUST AN OBJECT TO A NEW SET OF X,Y WORLD COORDINATES      *
    1257                    *          BEFORE THEY ARE STORED(TAKE EFFECT).                          *
    1258                    * NOTE: CURRENT OBJECT COORDS. MUST BE ABSOLUTE WORLD.                   *
    1259                    * A0 = PTR TO OBJECT                                                     *
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   24

    1260                    * A4 = NEW WTLX, 32 BITS                                                 *
    1261                    * A5 = NEW WTLY, 32 BITS                                                 *
    1262                    *                                                                        *
    1263                    **************************************************************************
    1264                    ADJNEWTL
    1265                            MMTM    SP,A1,A2
    1266                            CALLR   GSCRNREL                ;SCREEN RELATIVE PLEASE
    1267                            ADD     A4,A1
    1268                            ADD     A5,A2                   ;ADJUST
    1269                            MOVE    A1,*A0(OXVAL),L
    1270                            MOVE    A2,*A0(OYVAL),L         ;STORE
    1271                            MMFM    SP,A1,A2
    1272                            RETS
    1273                    **************************************************************************
    1274                    *                                                                        *
    1275                    * GSCRNREL - GET THE SCREEN RELATIVE X,Y COORDINATES OF AN OBJECT        *
    1276                    *          IT IS ASSUMED THATE THE CURRENT X,Y COORDINATES ARE           *
    1277                    *          WORLD ABSOLUTE.                                               *
    1278                    * A0 = PTR TO THE OBJECT BLOCK                                           *
    1279                    * RETURNS                                                                *
    1280                    * A1 = X SCREEN RELATIVE, 32 BITS                                        *
    1281                    * A2 = Y SCREEN RELATIVE, 32 BITS                                        *
    1282                    *                                                                        *
    1283                    **************************************************************************
    1284                    GSCRNREL
    1285                            PUSH    A5
    1286                            MOVE    @WORLDTLX,A5,L
    1287                            MOVE    *A0(OXVAL),A1,L
    1288                            SUB     A5,A1
    1289                            MOVE    @WORLDTLY,A5,L
    1290                            MOVE    *A0(OYVAL),A2,L
    1291                            SUB     A5,A2
    1292                            PULL    A5
    1293                            RETS
    1294                    
    1295                    **************************************************************************
    1296                    *                                                                        *
    1297                    * SCRNRELV - MAKE THE X & Y VELOCITIES OF AN OBJECT RELATIVE TO THE      *
    1298                    *          SCREEN. IN OTHER WORDS, ADJUST THEM SO THAT THE CURRENT       *
    1299                    *          SCROLL RATE DOESN'T AFFECT THEM.                              *
    1300                    * A0 = PTR TO OBJECT                                                     *
    1301                    *                                                                        *
    1302                    **************************************************************************
    1303                    SCRNRELV
    1304                            MMTM    SP,A1,A5
    1305                            MOVE    @SCROLLX,A5,L
    1306                            MOVE    *A0(OXVEL),A1,L
    1307                            ADD     A5,A1
    1308                            MOVE    A1,*A0(OXVEL),L
    1309                            MOVE    @SCROLLY,A5,L
    1310                            MOVE    *A0(OYVEL),A1,L
    1311                            ADD     A5,A1
    1312                            MOVE    A1,*A0(OYVEL),L
    1313                            MMFM    SP,A1,A5
    1314                            RETS
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   25

    1315                    
    1316                    **************************************************************************
    1317                    *                                                                        *
    1318                    * GANISAG - ADJUST CURRENT OBJECT IMAGE WITH RESPECT TO IT'S             *
    1319                    *          ANIMATION PNT. AND FLIP FLAGS                                 *
    1320                    * NOTE: CALL ONLY AFTER INITIALIZING WITH STFOBJ, OR SOMETHING.          *
    1321                    * A0 = PTR TO OBJECT BLOCK                                               *
    1322                    * A2 = NEW OYVAL                                                         *
    1323                    * A3 = NEW OXVAL                                                         *
    1324                    * A4 = NEW FLAGS                                                         *
    1325                    * RETURNS                                                                *
    1326                    * A2 = ADJUSTED OYVAL                                                    *
    1327                    * A3 = ADJUSTED OXVAL                                                    *
    1328                    *                                                                        *
    1329                    **************************************************************************
    1330                    GANISAG
    1331                            MMTM    SP,A1,A4,A6,A7
    1332                            MMTM    SP,A2,A3
    1333                            MOVE    *A0(OIMG),A1,L
    1334                            CALLR   GSAGOF
    1335                            MOVE    A3,*A0(OSAG),L
    1336                            MOVE    A2,*A0(OSIZE),L
    1337                            MOVE    A4,*A0(OFLAGS),L
    1338                            CALLR   GANIOF
    1339                            MMFM    SP,A2,A3
    1340                            SUB     A6,A3   
    1341                            SUB     A7,A2                   ;ADJUST UPPER LEFT CORNER
    1342                            MOVE    A3,*A0(OXVAL),L
    1343                            MOVE    A2,*A0(OYVAL),L
    1344                            MMFM    SP,A1,A4,A6,A7
    1345                            RETS
    1346                    *
    1347                    *START AN OBJECT
    1348                    *A0=OXVAL
    1349                    *A1=OYVAL
    1350                    *A2=OIMG
    1351                    *A3=OZPOS
    1352                    *A4=OFLAGS
    1353                    *A5=OID
    1354                    *A6=XVEL
    1355                    *A7=YVEL
    1356                    *
    1357                    STRTOBJ
    1358                            MMTM    SP,A1,A2,A3,A4,A6,A7,A9,A10
    1359                            MOVE    A0,A9                   ;SAVE X,Y
    1360                            MOVE    A1,A10
    1361                            MOVE    A2,A1                   ;SAVE OIMG
    1362                    
    1363                            MOVE    *A1(ICMAP),A0,L         ;GET THE PALETTE NAME
    1364                            CALLA   GETFPAL                 ;GET A PALETTE
    1365                            MOVE    A0,@CURPAL,W            ;STUFF THIS IN CURRENT PAL
    1366                            CALLA   GETOBJ
    1367                    
    1368                            MOVE    A3,*A0(OZPOS),W
    1369                            MOVE    A5,*A0(OID),W
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   26

    1370                            MOVE    A6,*A0(OXVEL),L
    1371                            MOVE    A7,*A0(OYVEL),L
    1372                            JRUC    STFOBJ0
    1373                    BEGINOBJ
    1374                            MOVE    @WORLDTLX,A8,L          ;ADJUST FOR WORLD COORD
    1375                            ADD     A8,A0
    1376                            MOVE    @WORLDTLY,A8,L
    1377                            ADD     A8,A1
    1378                    
    1379                    BEGINOBJ2
    1380                            CALLR   STRTOBJ
    1381                            MOVE    A13,*A0(OPLINK),L
    1382                            CALLA   INSOBJ                  ;INSERT OBJECT INTO LIST
    1383                            MOVE    A0,A8
    1384                            RETS
    1385                            
    1386                    **************************************************************************
    1387                    *                                                                        *
    1388                    * STFOBJ - STUFF AN OBJECT USING AN INITIALIZATION TABLE                 *
    1389                    * A0  = PTR TO THE IMAGE                                                 *
    1390                    * A14 = PTR TO INIT. TABLE                                               *
    1391                    * INIT. TABLE:                                                           *
    1392                    *       .LONG   OXVEL,OYVEL,OXVAL,XYVAL                                  *
    1393                    *       .WORD   OZVEL,OZPOS                                              *
    1394                    *       .LONG   OIMG,OZSIZ,OCVECT                                        *
    1395                    *       .WORD   OFLAGS,OID                                               *
    1396                    
    1397                    ; .LONG OXVAL,OYVAL,OIMG
    1398                    ; .WORD OZPOS,OFLAGS,OID
    1399                    ; .LONG OXVEL,OYVEL,OCVECT
    1400                    
    1401                    * RETURNS                                                                *
    1402                    * A14 = POINTING TO WORD AFTER INIT TAB                                  *
    1403                    *                                                                        *
    1404                    **************************************************************************
    1405                    ;STFOBJ
    1406                    ;       MMTM    SP,A1,A2,A3,A4,A6,A7,A9,A10
    1407                    ;
    1408                    ;       MOVE    *A14+,A1,L      ;XVEL
    1409                    ;       MOVE    A1,*A0(OXVEL),L
    1410                    ;       MOVE    *A14+,A1,L      ;YVEL
    1411                    ;       MOVE    A1,*A0(OYVEL),L
    1412                    ;
    1413                    ;       MOVE    *A14+,A9,L      ;XVAL
    1414                    ;       MOVE    *A14+,A10,L     ;YVAL
    1415                    ;
    1416                    ;       MOVE    *A14+,A1,L      ;ZVEL:ZPOS
    1417                    ;
    1418                    ;       CLR     A2              ;SPLIT UP OZPOS:OZVEL
    1419                    ;       MOVY    A1,A2
    1420                    ;       SLL     16,A1
    1421                    ;       MOVE    A1,*A0(OZVEL),L
    1422                    ;       MOVE    A2,*A0(OZVAL),L
    1423                    ;
    1424                    ;       MOVE    *A14+,A1,L      ;IMG
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   27

    1425                    ;       MOVE    A1,*A0(OIMG),L
    1426                    ;       MOVE    *A14+,A2,L      ;ZSIZE
    1427                    ;       MOVE    A2,*A0(OZSIZ),L
    1428                    ;       MOVE    *A14+,A2,L      ;CVECT
    1429                    ;       MOVE    A2,*A0(OCVECT),L
    1430                    ;       MOVE    *A14+,A4,W      ;FLAGS
    1431                    ;       MOVE    *A14+,A2,W      ;OID
    1432                    ;       MOVE    A2,*A0(OID),W
    1433                    ;       
    1434                    ;       MOVE    @CURPAL,A2,W            ;OCONST:OPAL
    1435                    ;       MOVE    A2,*A0(OPAL),W
    1436                    ;
    1437                    ;       CALLR   GSAGOF
    1438                    ;       CALLR   GANIOF          ;ADJUST ANIMATION OFFSET
    1439                    ;       SUB     A6,A9           ;SUBTRACT X ANIOFF
    1440                    ;       SUB     A7,A10          ;SUBTRACT Y ANIOFF
    1441                    ;       MOVE    A9,*A0(OXVAL),L
    1442                    ;       MOVE    A10,*A0(OYVAL),L
    1443                    ;       MOVE    A1,*A0(OIMG),L
    1444                    ;       MOVE    A3,*A0(OSAG),L
    1445                    ;       MOVE    A2,*A0(OSIZE),L
    1446                    ;       MOVE    A4,*A0(OFLAGS),L
    1447                    ;       MMFM    SP,A1,A2,A3,A4,A6,A7,A9,A10
    1448                    ;       RETS
    1449                    
    1450                    STFOBJ
    1451                            MMTM    SP,A1,A2,A3,A4,A6,A7,A9,A10
    1452                            MOVE    *A14+,A9,L      ;XVAL
    1453                            MOVE    *A14+,A10,L     ;YVAL
    1454                            MOVE    *A14+,A1,L      ;IMG   (A1)
    1455                    
    1456                            MOVE    *A14+,A2,W      ;ZPOS
    1457                            MOVE    A2,*A0(OZPOS),W
    1458                            MOVE    *A14+,A4,W      ;FLAGS  (A4)
    1459                            MOVE    *A14+,A2,W      ;OID
    1460                            MOVE    A2,*A0(OID),W
    1461                    
    1462                            MOVE    *A14+,A2,L      ;XVEL
    1463                            MOVE    A2,*A0(OXVEL),L
    1464                            MOVE    *A14+,A2,L      ;YVEL
    1465                            MOVE    A2,*A0(OYVEL),L
    1466                    ;       MOVE    *A14+,A2,L      ;CVECT
    1467                    ;       MOVE    A2,*A0(OCVECT),L
    1468                    STFOBJ0 
    1469                            MOVE    @CURPAL,A2,W            ;OCONST:OPAL
    1470                            MOVE    A2,*A0(OPAL),W
    1471                    
    1472                            CALLR   GSAGOF
    1473                            CALLR   GANIOF          ;ADJUST ANIMATION OFFSET
    1474                    
    1475                            SUB     A6,A9           ;SUBTRACT X ANIOFF
    1476                            SUB     A7,A10          ;SUBTRACT Y ANIOFF
    1477                    
    1478                            MOVE    A9,*A0(OXVAL),L
    1479                            MOVE    A10,*A0(OYVAL),L
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   28

    1480                            MOVE    A1,*A0(OIMG),L
    1481                            MOVE    A3,*A0(OSAG),L
    1482                            MOVE    A2,*A0(OSIZE),L
    1483                            MOVE    A4,*A0(OFLAGS),L
    1484                            MMFM    SP,A1,A2,A3,A4,A6,A7,A9,A10
    1485                            RETS
    1486                    
    1487                    *
    1488                    *GET SAG FOR OBJECT - ADJUSTS SAG FOR FLIP
    1489                    *CALLING PARAMETERS:
    1490                    *A1=PTR TO IMAGE HEADER (OIMG)
    1491                    *A4=OBJECT FLAGS
    1492                    *RETURNS:
    1493                    *A2=RETURNED WITH NEW OSIZE
    1494                    *A3=RETURNED WITH NEW SAG
    1495                    *A4=RETURNED WITH NEW OFFSET:OFLAGS
    1496                    *
    1497                    BKGSAGOF:
    1498                            MMTM    SP,A5,A6,A7
    1499                            MOVE    *A1(ISAG->20),A3,L      ;GET TOP LEFT SAG (-20 -> no ani off)
    1500                            JRUC    GSAGOF_G
    1501                    GSAGOF:
    1502                            MMTM    SP,A5,A6,A7
    1503                            MOVE    *A1(ISAG),A3,L  ;GET TOP LEFT SAG
    1504                    GSAGOF_G:
    1505                            ZEXT    A4,W            ;ZERO OFFSET IN A4
    1506                            MOVE    *A1(ISIZE),A2,L
    1507                            CLR     A5
    1508                            MOVX    A2,A5
    1509                            ADDK    3,A5            ;ADJUST HOR SIZE FOR MORSEL
    1510                            SRL     2,A5
    1511                            SLL     2,A5
    1512                            MOVX    A5,A2
    1513                            SLL     3,A5            ;ADJUST FOR BYTE ADDRESS
    1514                    
    1515                    *HORIZONTAL FLIP CASE
    1516                    GSAGH:
    1517                            BTST    B_FLIPH,A4
    1518                            JREQ    GSAGV           ;NO H FLIP, TRY VERT FLIP
    1519                            MOVE    A5,A6
    1520                            SUBK    8,A6
    1521                            ADD     A6,A3           ;ADD THS-1 TO SAG
    1522                    
    1523                            MOVX    A2,A6
    1524                            SLL     1,A6
    1525                            DEC     A6              ;2*THS-1 TO OFFSET
    1526                            SLL     16,A6           ;ADJUST FOR B16-31
    1527                            ADDXY   A6,A4
    1528                            
    1529                    *VERTICAL FLIP CASE
    1530                    GSAGV:
    1531                            BTST    B_FLIPV,A4
    1532                            JREQ    GSAGX           ;NO VERT FLIP 
    1533                            MOVY    A2,A6           ;GET HEIGHT
    1534                            SRL     16,A6
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   29

    1535                            DEC     A6              ;FIRST ENTRY LAST ROW
    1536                            MOVE    A5,A7           ;GET THS
    1537                            MPYS    A6,A7           ;THS*(TVS-1)
    1538                            ADD     A7,A3           ;ADD TO SAG
    1539                    
    1540                            MOVX    A2,A6
    1541                            SLL     1,A6
    1542                            NEG     A6              ;-2*THS
    1543                            SLL     16,A6           ;ADJUST FOR B16-31
    1544                            ADDXY   A6,A4           ;ADD TO OFFSET
    1545                    GSAGX:
    1546                            MMFM    SP,A5,A6,A7
    1547                            RETS
    1548                    
    1549                    **************************************************************************
    1550                    *                                                                        *
    1551                    * ANI - ANIMATION SUBROUTINE                                             *
    1552                    * A1=NEW IMAGE POINTER                                                   *
    1553                    * A4=NEW OFLAGS                                                          *
    1554                    * A8=OBJECT STRUCTURE POINTER TO BE UPDATED                              *
    1555                    *                                                                        *
    1556                    **************************************************************************
    1557                    ANI: 
    1558                            MMTM    SP,A0,A2,A3,A4,A5,A6,A7,A9
    1559                    ANIG
    1560                            .IF     DEBUG
    1561                            CMPI    0FFC00000H,A1   ;FFE
    1562                            .ELSE
    1563                            CMPI    0FFE00000H,A1   ;FFE
    1564                            .ENDIF
    1565                    
    1566                    ;       CMPI    >FFC00000,A1    ;CHECK FOR BOGUS IMAGE  ;FFE
    1567                    
    1568                            JRHS    ANIG0
    1569                            .IF     DEBUG
    1570                            LOCKUP
    1571                            EINT
    1572                            .ELSE
    1573                            CALLERR 2,8
    1574                            .ENDIF
    1575                            JRUC    ANIGX
    1576                    ANIG0
    1577                    
    1578                            MOVE    *A8(OFLAGS),A5,W
    1579                            MOVE    *A8(OIMG),A3,L
    1580                            CMP     A1,A3
    1581                            JRNE    ANIG1           ;BR = NOT THE SAME IMAGE AS LAST TIME
    1582                    
    1583                            ZEXT    A4
    1584                            ZEXT    A5
    1585                            CMP     A4,A5
    1586                            JREQ    ANIGX           ;BR = EVERY THING IS THE SAME
    1587                    ANIG1
    1588                            SWAP    A4,A5
    1589                            SWAP    A1,A3
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   30

    1590                            MOVE    *A8(OSIZE),A2,L
    1591                            CALLR   GANIOF          ;GET OLD ANIMATION OFFSET
    1592                            MMTM    SP,A6,A7
    1593                            MOVE    A5,A4           ;NEW OFLAGS
    1594                            MOVE    A3,A1           ;NEW OIMG
    1595                    
    1596                            CALLR   GSAGOF          ;GET SAG, OFFSET, HW
    1597                            CALLR   GANIOF          ;GET NEW ANIMATION OFFSET
    1598                            MMFM    SP,A0,A5        ;BRING BACK OLD ANIMATION DELTA
    1599                            SUB     A6,A0           ;SUBTRACT NEW FROM OLD
    1600                            SUB     A7,A5
    1601                    
    1602                            MOVE    A8,A9                   ;GET PUSH ADDRESS OF OFLAGS,OSAG,OSIZE
    1603                            ADDI    OFLAGS+>60,A9
    1604                            CLR     A7
    1605                            MOVE    A7,*A8(OXCLIP),W        ;CLEAR PRECLIP
    1606                            MMTM    A9,A2,A3,A4             ;BLOW THIS STUFF OUT
    1607                            MOVE    A1,*A8(OIMG),L
    1608                    
    1609                            MOVE    *A8(OYVAL),A6,L
    1610                            ADD     A5,A6                   ;ADJUST OYVAL, OXVAL FOR DELTA X
    1611                            MOVE    A6,*A8(OYVAL),L
    1612                            MOVE    *A8(OXVAL),A7,L
    1613                            ADD     A0,A7
    1614                            MOVE    A7,*A8(OXVAL),L
    1615                    ANIGX
    1616                            MMFM    SP,A0,A2,A3,A4,A5,A6,A7,A9
    1617                            RETS
    1618                    
    1619                    **************************************************************************
    1620                    *                                                                        *
    1621                    * GETANIXY - GET THE X AND Y POSITIONS OF AN OBJECTS ANIMATION           *
    1622                    *          POINT.                                                        *
    1623                    * A8 = OBLOCK PTR.                                                       *
    1624                    * RETURNS                                                                *
    1625                    * A2 = APOINT OYVAL, 32 BITS                                             *
    1626                    * A3 = APOINT OXVAL, 32 BITS                                             *
    1627                    *                                                                        *
    1628                    **************************************************************************
    1629                    GETANIXY
    1630                            MMTM    SP,A1,A4,A6,A7
    1631                            MOVE    *A8(OIMG),A1,L
    1632                            MOVE    *A8(OSIZE),A2,L
    1633                            MOVE    *A8(OFLAGS),A4,W
    1634                            CALLR   GANIOF
    1635                            MOVE    *A8(OXVAL),A3,L
    1636                            MOVE    *A8(OYVAL),A2,L
    1637                            ADD     A6,A3
    1638                            ADD     A7,A2
    1639                            MMFM    SP,A1,A4,A6,A7
    1640                            RETS
    1641                    *
    1642                    *GET ANIMATION OFFSET
    1643                    *A1=OIMG, A2=H:W, A4=OFLAGS
    1644                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Mar 28 23:43:16 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP DISPLAY PROCESSOR VER. 3.1                                       PAGE   31

    1645                    *OUTPUT: 
    1646                    *A6=X ANIMATION OFFSET X 64K
    1647                    *A7=Y ANIMATION OFFSET X 64K
    1648                    GANIOF: 
    1649                            MMTM    SP,A2,A3
    1650                            MOVE    *A1(IANIOFF),A6,L               
    1651                    
    1652                    
    1653                            CMPI    IROM,A6
    1654                            JRLT    GANIOF_OK
    1655                            CLR     A6
    1656                    GANIOF_OK:
    1657                    
    1658                    
    1659                            CLR     A7              ;MAKE SURE A7 IS 0
    1660                            MOVY    A6,A7
    1661                            SLL     16,A6           ;MOVE TO UPPER WORD             
    1662                            SUBI    >00010001,A2    ;ADJUST FOR -1
    1663                            CLR     A3
    1664                            MOVY    A2,A3
    1665                            SLL     16,A2           ;MOVE TO UPPER WORD
    1666                            BTST    B_FLIPH,A4
    1667                            JRZ     GANI1
    1668                            NEG     A6
    1669                            ADD     A2,A6           ;SUB THS-1 FOR H-FLIP
    1670                    GANI1:
    1671                            BTST    B_FLIPV,A4
    1672                            JRZ     GANI2
    1673                            NEG     A7
    1674                            ADD     A3,A7           ;SUB TVS-1 FOR V-FLIP
    1675                    GANI2:
    1676                            MMFM    SP,A2,A3
    1677                            RETS
    1678                    
    1679                            .END
    1680                    
    1680                    
 *********  MISSING .ENDM DIRECTIVE
LAST ERROR AT  25

 5 Errors,  No Warnings
